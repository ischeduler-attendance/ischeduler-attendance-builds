name: Development Distribution

on: push

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest # using ubuntu latest version / or you can use a specific version
    env:
        SENTRY_PROPERTIES: ./android/sentry.properties
        SENTRY_DIST: 0
        SENTRY_RELEASE: alpha
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        CURRENT_BRANCH: ${{ github.event.client_payload.branch }}
        GIT_LAB_COMMIT_SHA: ${{ github.event.client_payload.commit_sha }}
        GIT_LAB_PIPELINE_ID: ${{ github.event.client_payload.pipeline_id }}
        USER_NAME: ${{ secrets.GITLAB_USER_NAME }}
        USER_EMAIL: ${{ secrets.GITLAB_USER_EMAIL }}
        SSH_KNOWN_HOST: ${{ secrets.SSH_KNOWN_HOST }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REPO_URL: ${{ secrets.REPO_URL }}
        ENCRYPT_PASSWORD: ${{ secrets.ENCRYPT_PASSWORD }}
        OAUTH_CLIENT_ID_ANDROID: ${{ secrets.OAUTH_CLIENT_ID_ANDROID_STAGING }}
        APP_METRICA_API_KEY: ${{ secrets.APP_METRICA_API_KEY_STAGING }}
        FIREBASEAPPDISTRO_APP: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get repository
        run: |
          rm -rf ./.git ./.github ./.gitignore ./*
          ls -la ./
          git clone "$REPO_URL" --branch="main" --single --depth=1 ./
          git log -1

      - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build  android project
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies # install project deps with --frozen-lockfile to make sure we will have the same packages version ( very recommended  on running yarn install on ci)
        run: yarn install --frozen-lockfile

      ## configure cash for gradle : will help to reduce build time
      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Define vars
        id: vars # Needed to reuse at 'with: steps.vars.outputs'
        shell: bash
        run: |
          # set tag version
          echo ::set-output name=tag::${GITHUB_REF_SLUG}
      - name: Generate App APK
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          REACT_NATIVE_ENV: develop
          APP_VERSION: ${{ steps.vars.outputs.tag }}
        id: generate_apk
        run: |
          echo ls
          echo ${{ secrets.ANDROID_SIGNING_KEY }} | base64 --decode > android/app/my-upload-key.keystore
          cd android && ./gradlew assembleRelease --no-daemon

      ## Distribute app to Firebase App Distribution for testing / use google play internal track if you have a google play account
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.ANDROID_FIREBASE_APP_ID}}
          token: ${{secrets.ANDROID_FIREBASE_TOKEN}}
          groups: testers
          file: android/app/build/outputs/apk/release/app-armeabi-v7a-release.apk